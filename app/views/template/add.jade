extends ../layouts/backend

block head
    link(rel="stylesheet", href="/vendor/fileupload/css/jquery.fileupload-ui.css")
    link(rel="stylesheet", href="/vendor/bootstrap-colorpicker/css/bootstrap-colorpicker.css")

block content
    div.page-header
        h2
            a(href="/admin/template") Templates
            |  / Add new template

            span.pull-right
                button#saveButton.btn.btn-primary(type="button") Save

    include ../partial/flash

    ul.nav.nav-tabs
        li.active
            a(href="#general", data-toggle="tab") General
        li
            a(href="#files", data-toggle="tab") Files
        li
            a(href="#memberships", data-toggle="tab") Memberships

    form#addTemplateForm.form-horizontal(action="/admin/template/add", method="post")
        div.tab-content
            div#general.tab-pane.active
                div.form-group
                    label.control-label.col-lg-2 Name
                    div.col-lg-6
                        input.form-control(type="text", name="name")

                div.form-group
                    label.control-label.col-lg-2 Slug
                    div.col-lg-6
                        input.form-control(type="text", name="slug")

                div.form-group
                    label.control-label.col-lg-2 Demo URL
                    div.col-lg-8
                        input.form-control(type="text", name="demo_url", placeholder="http://")

                div.form-group
                    label.control-label.col-lg-2 Preset styles
                    div#themes.col-lg-10
                        div#themeTemplate.hide.row(style="margin-bottom: 10px;")
                            div.col-lg-3
                                input.form-control(type="text", name="theme.name[]", placeholder="Name")
                            div.col-lg-2
                                input.form-control(type="text", name="theme.color[]", placeholder="Color")
                            div.col-lg-6
                                input.form-control(type="text", name="theme.demo_url[]", placeholder="Style URL")
                            div.col-lg-1
                                button.btn.btn-default.removeThemeButton(type="button")
                                    i.fa.fa-times
                        button.btn.btn-default#addThemeButton(type="button")
                            i.fa.fa-plus

                div.form-group
                    label.control-label.col-lg-2 Description
                    div.col-lg-8
                        textarea.form-control(name="description", rows=6)

                div.form-group
                    label.control-label.col-lg-2 Tags
                    div.col-lg-8
                        input.form-control(type="text", name="tags")
                        small.help-block Separate tags by a comma

                div.form-group
                    label.control-label.col-lg-2 Software versions
                    div.col-lg-6
                        input.form-control(type="text", name="software_versions")

                div.form-group
                    label.control-label.col-lg-2 Supported browsers
                    div.col-lg-8
                        div.btn-group
                            button.btn.btn-default.browserButton.active(type="button", value="IE 8")
                                i.fa.fa-check
                                | IE 8

                            button.btn.btn-default.browserButton(type="button", value="IE 9") IE 9
                            button.btn.btn-default.browserButton(type="button", value="IE 10") IE 10
                            button.btn.btn-default.browserButton.active(type="button", value="Chrome")
                                i.fa.fa-check
                                | Chrome
                            button.btn.btn-default.browserButton.active(type="button", value="Firefox")
                                i.fa.fa-check
                                | Firefox
                            button.btn.btn-default.browserButton.active(type="button", value="Safari")
                                i.fa.fa-check
                                | Safari
                            button.btn.btn-default.browserButton.active(type="button", value="Opera")
                                i.fa.fa-check
                                | Opera
                        input(type="hidden", name="browsers", value="IE 8,Chrome,Firefox,Safari,Opera")

                div.form-group
                    label.control-label.col-lg-2 High resolution
                    div.col-lg-6
                        div.btn-group
                            button.btn.btn-default.highResolutionButton(type="button", value="yes") Yes
                            button.btn.btn-default.highResolutionButton(type="button", value="no") No
                            button.btn.btn-default.highResolutionButton.active(type="button", value="n/a") N/A
                        input(type="hidden", name="high_resolution", value="n/a")

                div.form-group
                    label.control-label.col-lg-2 Year
                    div.col-lg-2
                        input.form-control(type="text", name="year", value="#{year}")

                div.form-group
                    div.col-lg-10.col-lg-offset-2
                        div.checkbox
                            label
                                input(type="checkbox", name="responsive", value="1", checked)
                                | Support responsive

                div.form-group
                    label.control-label.col-lg-2 Thumbnail
                    div.col-lg-10
                        div.btn.btn-default.fileinput-button
                            span Upload thumbnail
                            input#thumbnailUploader(type="file", name="thumbnail", data-url="/admin/thumb")
                        div(style="margin-top: 20px;")
                            div.progress.progress-striped.active.hide
                                div#thumbProgress.progress-bar.progress-bar-success(style="width: 100%;")
                        div.tb-tmpl-thumb
                        input(type="hidden", name="thumbs")

                input(name="uploaded_files", type="hidden")

            div#files.tab-pane
                table.table.hide
                    thead
                        tr
                            th File name (Size)
                            th(style="width: 30%") Description
                            th(style="width: 30%") Progress
                            th Actions
                    tbody#uploadedFiles
                        tr#fileRowTemplate.hide
                            td
                            td
                                input.form-control.descriptionText(type="text", disabled)
                            td
                                div.progress.progress-striped.active
                                    div.progress-bar.progress-bar-success(style="width: 0%;")
                            td
                                button.btn.btn-danger.removeButton Remove

                div.text-center
                    p You can choose many files at the same time
                    div.btn.btn-default.fileinput-button
                        span Upload files
                        input#uploader(type="file", name="files[]", data-url="/admin/upload", multiple)

            div#memberships.tab-pane
                p Indicate the accounts who can download the files

                div.form-group
                    label.control-label.col-lg-2 Free
                    div.col-lg-10
                        div.checkbox
                            label
                                input(type="checkbox", name="free", value="1")
                                | Free for all accounts
                        small.help-block All accounts can download the files

                div.form-group
                    label.control-label.col-lg-2 Specific memberships
                    div.col-lg-10
                        if (!memberships || memberships.length == 0)
                            p.form-control-static
                                | Not found memberships. You can add new one from&nbsp;
                                a(href="/admin/memberships") Memberships page
                        else
                            p.form-control-static
                                button#checkMembershipButton.btn.btn-default(type="button", data-checked="false") Check all
                            for membership in memberships
                                div.checkbox
                                    label
                                        input(type="checkbox", name="memberships[]", value="#{membership._id}")
                                        | #{membership.title}

    // Remove file confirmation dialog
    div#removeFileDialog.modal.fade.in
        div.modal-dialog
            div.modal-content
                div.modal-header
                    button.close(type="button", data-dismiss="modal", aria-hidden="true") &times;
                    h4.modal-title Remove file
                div.modal-body
                    div Are you sure you want to remove this file?
                    div.text-danger This action cannot be undone.
                div.modal-footer
                    button.btn.btn-danger.yesButton Yes
                    button.btn.btn-default(data-dismiss="modal") No


block footerScript
    script(type="text/javascript", src="/vendor/fileupload/js/vendor/jquery.ui.widget.js")
    script(type="text/javascript", src="/vendor/fileupload/js/jquery.iframe-transport.js")
    script(type="text/javascript", src="/vendor/fileupload/js/jquery.fileupload.js")
    script(type="text/javascript", src="/vendor/fileupload/js/jquery.fileupload-process.js")
    script(type="text/javascript", src="/vendor/filesize/filesize.min.js")
    script(type="text/javascript", src="/vendor/bootstrapvalidator/js/bootstrapValidator.min.js")
    script(type="text/javascript", src="/vendor/bootstrap-colorpicker/js/bootstrap-colorpicker.min.js")
    script(type="text/javascript").
        $(document).ready(function() {
            // Form validator
            $('#addTemplateForm').bootstrapValidator({
                fields: {
                    name: {
                        validators: {
                            notEmpty: {
                                message: 'The template name is required'
                            }
                        }
                    },
                    slug: {
                        validators: {
                            notEmpty: {
                                message: 'The slug is required'
                            }
                        }
                    },
                    demo_url: {
                        validators: {
                            notEmpty: {
                                message: 'The demo URL is required'
                            },
                            uri: {
                                message: 'The demo URL is not a valid URL'
                            }
                        }
                    },
                    year: {
                        validators: {
                            notEmpty: {
                                message: 'The publishing year is required'
                            },
                            regexp: {
                                regexp: /^\d{4}$/,
                                message: 'The publishing year is not valid'
                            }
                        }
                    }
                }
            });

            // Generate slug based one template's name
            $('input[name="name"]').on('keyup', function() {
                var name = $(this).val(), $slug = $('input[name="slug"]');
                if (name == '') {
                    $slug.val('');
                    return;
                }
                $.ajax({
                    type: 'POST',
                    url: '/admin/template/slug',
                    data: {
                        name: name
                    },
                    dataType: 'json'
                }).success(function(response) {
                    $slug.val(response.slug);
                });
            });

            function updateProgress(fileName, progress) {
                var $tr = $('#uploadedFiles').find('tr[data-file-name="' + fileName + '"]');
                if ($tr) {
                    $tr.find('.progress-bar').css('width', progress);
                    if (progress == '100%') {
                        $tr.find('.progress').removeClass('progress-striped');
                    }
                }
            };

            // Uploader handler
            $('#uploader').fileupload({
                dataType: 'json',
                autoUpload: true,
                url: '/admin/file/upload',
                start: function(e, data) {
                    $('#saveButton').attr('disabled', 'disabled');
                },
                done: function(e, data) {
                    $.each(data.result.files, function(index, file) {
                        var $tr = $('#uploadedFiles').find('tr[data-file-name="' + file.name + '"]');
                        if ($tr) {
                            $tr.data('file', file).find('input.descriptionText').removeAttr('disabled');
                        }

                        // For small files, I cannot receive the progress via socket
                        // because the upload is done before the socket emits event
                        // In this case, I've to update the progress bar width
                        $tr.find('.progress').removeClass('progress-striped').end().find('.progress-bar').css('width', '100%');
                    });

                    $('#saveButton').removeAttr('disabled');
                }
            }).on('fileuploadadd', function(e, data) {
                $('#uploadedFiles').parent().removeClass('hide');
                $.each(data.files, function(index, file) {
                    var $tr = $('#fileRowTemplate').clone();
                    $tr
                        .appendTo('#uploadedFiles')
                        .removeClass('hide')
                        .removeAttr('id')
                        .attr('data-file-name', file.name)
                        .find('td')
                            .eq(0).html(file.name + ' (' + filesize(file.size) + ')');
                });
            }).on('fileuploadprogress', function(e, data) {
                updateProgress(data.files[0].name, 100 * data.loaded / data.total + '%');
            }).on('fileuploadprogressall', function(e, data) {
            }).on('fileuploadfail', function(e, data) {
            });

            var socket = io.connect();
            socket.on('uploadProgress', function(data) {
                // updateProgress(data.filename, data.progress);
            });

            // Upload thumbnail
            $('#thumbnailUploader').fileupload({
                dataType: 'json',
                start: function(e) {
                    $('#saveButton').attr('disabled', 'disabled');
                    // Show the thumbnail generating progress
                    $('#thumbProgress').parent().removeClass('hide');
                },
                done: function(e, data) {
                    $('#thumbProgress').parent().addClass('hide');
                    $('#saveButton').removeAttr('disabled');
                    $('input[name="thumbs"]').val(JSON.stringify(data.result.files));
                    $('.tb-tmpl-thumb').html('').append($('<img/>').attr('src', '#{thumbPrefixUrl}' + data.result.files.original));
                }
            });

            $('#saveButton').on('click', function(e) {
                // Collect uploaded files
                var uploadedFiles = [], file;
                $('#uploadedFiles').find('tr').each(function() {
                    if (file = $(this).data('file')) {
                        uploadedFiles.push(file);
                    }
                });
                $('input[name="uploaded_files"]').val(JSON.stringify(uploadedFiles));

                // Supported browsers
                var browsers = [];
                $('.browserButton.active').each(function() {
                    browsers.push($(this).val());
                });
                $('input[name="browsers"]').val(browsers.join(','));

                $('#addTemplateForm').submit();
            });

            // Update file description handler
            $('#uploadedFiles').on('keyup', '.descriptionText', function() {
                $(this).parents('tr').data('file').description = $(this).val();
            });

            // Remove file handler
            $('#uploadedFiles').on('click', '.removeButton', function() {
                var $that = $(this), removeFileDialog = $('#removeFileDialog');
                removeFileDialog
                    // Yes button click handler
                    .find('.yesButton')
                        .off('click')
                        .on('click', function() {
                            $that.parents('tr').remove();
                            removeFileDialog.modal('hide');
                        })
                        .end()
                    .modal('show');
            });

            // Update supported browsers option
            $('.browserButton').on('click', function() {
                if ($(this).hasClass('active')) {
                    $(this).removeClass('active').find('i').remove();
                } else {
                    $(this).addClass('active').prepend($('<i/>').addClass('fa fa-check'));
                }
            });

            // Update high resolution option
            $('.highResolutionButton').on('click', function() {
                $(this).parent().find('button').removeClass('active');
                $(this).addClass('active');
                $('input[name="high_resolution"]').val($(this).val());
            });

            // Manage themes
            $('#addThemeButton').on('click', function() {
                var $row = $('#themeTemplate').clone();
                $row
                    .removeAttr('id')
                    .find('.removeThemeButton')
                        .on('click', function() {
                            $row.remove();
                        })
                        .end()
                    .removeClass('hide')
                    .insertBefore('#addThemeButton');
            });

            $('#themes').on('focus', '[name="theme.color[]"]', function() {
                $(this).colorpicker();
            });

            // Disable membership options when the template is marked as free
            $('input[name="free"]').on('click', function() {
                if ($(this).is(':checked')) {
                    $('input[name="memberships[]"]').attr('disabled', 'disabled');
                } else {
                    $('input[name="memberships[]"]').removeAttr('disabled');
                }
            });

            // Check all memberships
            $('#checkMembershipButton').on('click', function() {
                if ('false' == $(this).attr('data-checked') || false == $(this).attr('data-checked')) {
                    $('input[name="memberships[]"]').prop('checked', true);
                    $(this).attr('data-checked', 'true').html('Uncheck all');
                } else {
                    $('input[name="memberships[]"]').removeAttr('checked');
                    $(this).attr('data-checked', 'false').html('Check all');
                }
            });
        });