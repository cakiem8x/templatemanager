extends ../layouts/backend

block head
    link(rel="stylesheet", href="/vendor/fileupload/css/jquery.fileupload-ui.css")
    link(rel="stylesheet", href="/vendor/inlineEditor/css/inlineEditor.min.css")

block content
    div.page-header
        h2
            a(href="/admin/file") Files

            span.pull-right
                div.btn.btn-default.fileinput-button
                    span Upload new files
                    input#uploader(type="file", name="files[]", data-url="/admin/file/upload", multiple)

    if total == 0
        p.text-center There is no files
    else
        div.row
            div.col-lg-8 Found #{total} files
            div.col-lg-4.pull-right
                form.form-inline(method="get", action="/admin/file")
                    div.input-group
                        input.form-control(type="text", name="q", value="#{q}")
                        span.input-group-btn
                            button.btn.btn-default(type="submit")
                                i.fa.fa-search

        table.table(style="margin-top: 20px;")
            thead
                tr
                    th(style="width: 40%;")
                        a(href="#{url(req, { sort: (1 == sortDirection ? '-' : '') + 'name' })}")
                            if ('name' == sortBy && 1 == sortDirection)
                                | &uarr;&nbsp;
                            else if ('name' == sortBy && -1 == sortDirection)
                                | &darr;&nbsp;
                            | Name
                    th
                        a(href="#{url(req, { sort: (1 == sortDirection ? '-' : '') + 'size' })}")
                            if ('size' == sortBy && 1 == sortDirection)
                                | &uarr;&nbsp;
                            else if ('size' == sortBy && -1 == sortDirection)
                                | &darr;&nbsp;
                            | Size
                    th
                        a(href="#{url(req, { sort: (1 == sortDirection ? '-' : '') + 'num_downloads' })}")
                            if ('num_downloads' == sortBy && 1 == sortDirection)
                                | &uarr;&nbsp;
                            else if ('num_downloads' == sortBy && -1 == sortDirection)
                                | &darr;&nbsp;
                            | # Downloads
                    th Free for guests
                    th
                        a(href="#{url(req, { sort: (1 == sortDirection ? '-' : '') + 'uploaded_date' })}")
                            if ('uploaded_date' == sortBy && 1 == sortDirection)
                                | &uarr;&nbsp;
                            else if ('uploaded_date' == sortBy && -1 == sortDirection)
                                | &darr;&nbsp;
                            | Uploaded date
                    th Actions
            tbody#uploadedFiles
                tr#fileRowTemplate.hide
                    td
                        p.fileName
                        p.text-info.editableDesc Click to edit
                        div.progress.progress-striped.active(style="margin: 10px 0;")
                            div.progress-bar.progress-bar-success(style="width: 0%;")
                        a.btn.btn-success.btn-xs.downloadUrlButton Show download URLs
                    td
                    td
                        span.fileNumDownloads 0
                    td
                        button.btn.btn-danger.freeButton(type="button")
                            i.fa.fa-times
                    td
                    td
                        div.btn-group
                            button.btn.btn-danger.removeButton(type="button", title="Remove")
                                i.fa.fa-times
                            button.btn.btn-default.changeButton(type="button", title="Upload")
                                i.fa.fa-upload
                for file in files
                    tr(data-file-id="#{file._id}", data-file-name="#{file.name}")
                        td
                            p.fileName #{file.name.length > 50 ? file.name.substr(0, 50) + '...' : file.name}
                            p.text-info.editableDesc #{file.description || 'Click to edit'}
                            div.progress.progress-striped.active.hide(style="margin: 10px 0;")
                                div.progress-bar.progress-bar-success(style="width: 0%;")
                            a.btn.btn-warning.btn-xs.downloadUrlButton Show download URLs
                        td #{filesize(file.size)}
                        td
                            span.fileNumDownloads(class=file.num_downloads == 0 ? '' : 'badge') #{file.num_downloads}
                        td
                            button.btn.freeButton(type="button", class=file.free ? 'btn-success' : 'btn-danger')
                                i.fa(class=file.free ? 'fa-check' : 'fa-times')
                        td #{moment(file.uploaded_date).format('YYYY-MM-DD HH:mm:ss')}
                        td
                            div.btn-group
                                button.btn.btn-danger.removeButton(type="button", title="Remove")
                                    i.fa.fa-times
                                button.btn.btn-default.changeButton(type="button", title="Upload")
                                    i.fa.fa-upload

        // Pagination
        if (numPages > 1)
            div.text-center
                ul.pagination
                    li(class=page == 1 ? 'disabled' : '')
                        a(href="#{url(req, { page: 1 })}") &larr;
                    li(class=page == 1 ? 'disabled' : '')
                        a(href="#{url(req, { page: parseInt(page) - 1 })}") &laquo;
                    - for (i = startRange; i <= endRange; i++)
                        li(class=(i == page) ? 'active' : '')
                            a(href="#{url(req, { page: i })}") #{i}
                    li(class=page == numPages ? 'disabled' : '')
                        a(href="#{url(req, { page: parseInt(page) + 1 })}") &raquo;
                    li(class=page == numPages ? 'disabled' : '')
                        a(href="#{url(req, { page: numPages })}") &rarr;

    // Remove file confirmation dialog
    div#removeFileDialog.modal.fade.in
        div.modal-dialog
            div.modal-content
                div.modal-header
                    button.close(type="button", data-dismiss="modal", aria-hidden="true") &times;
                    h4.modal-title Remove file
                div.modal-body
                    div Are you sure you want to remove this file?
                    div.text-danger This action cannot be undone.
                div.modal-footer
                    button.btn.btn-danger.yesButton Yes
                    button.btn.btn-default(data-dismiss="modal") No

    div#downloadUrlDialog.modal.fade.in
        div.modal-dialog
            div.modal-content
                div.modal-body
                    ul.nav.nav-tabs
                        li.active
                            a(href="#accountDownloadTab", data-toggle="tab") For Accounts
                        li
                            a(href="#guestDownloadTab", data-toggle="tab") For Guests
                    div.tab-content
                        div#accountDownloadTab.tab-pane.active
                        div#guestDownloadTab.tab-pane

                div.modal-footer
                    button.btn.btn-default(data-dismiss="modal") Close

block footerScript
    script(type="text/javascript", src="/vendor/fileupload/js/vendor/jquery.ui.widget.js")
    script(type="text/javascript", src="/vendor/fileupload/js/jquery.iframe-transport.js")
    script(type="text/javascript", src="/vendor/fileupload/js/jquery.fileupload.js")
    script(type="text/javascript", src="/vendor/fileupload/js/jquery.fileupload-process.js")
    script(type="text/javascript", src="/vendor/filesize/filesize.min.js")
    script(type="text/javascript", src="/vendor/inlineEditor/js/inlineEditor.min.js")
    script(type="text/javascript", src="/vendor/moment/moment.min.js")
    script(type="text/javascript").
        $(document).ready(function() {
            $('#uploadedFiles').on('updateProgress', function(fileName, progress) {
                var $tr = $(this).find('tr[data-file-name="' + fileName + '"]');
                if ($tr) {
                    $tr.find('.progress-bar').css('width', progress);
                    if (progress == '100%') {
                        $tr.find('.progress').removeClass('progress-striped');
                    }
                }
            });

            // Uploader handler
            $('#uploader').fileupload({
                dataType: 'json',
                autoUpload: true,
                formData: {},
                url: '/admin/file/upload',
                start: function(e, data) {
                    $('.changeButton').attr('disabled', 'disabled');
                },
                done: function(e, data) {
                    var editingRow = $('#uploader').data('editingRow');
                    $.each(data.result.files, function(index, file) {
                        var $tr        = $('#uploadedFiles').find('tr[data-file-name="' + file.name + '"]'),
                            editingRow = $('#uploader').data('editingRow');
                        if ($tr) {
                            $tr.find('input[type="text"]').removeAttr('disabled');
                            if (!editingRow) {
                                $tr.attr('data-file-id', file._id);
                            }
                        }

                        // For small files, I cannot receive the progress via socket
                        // because the upload is done before the socket emits event
                        // In this case, I've to update the progress bar width
                        $tr
                            .find('.progress')
                                .removeClass('progress-striped hide')
                                .end()
                            .find('.progress-bar')
                                .css('width', '100%')
                                .end()
                            .find('.fileNumDownloads')
                                .html(file.num_downloads)
                                .end()
                            .find('td')
                                .eq(4).html(moment(file.uploaded_date).format('YYYY-MM-DD HH:mm:ss'));
                    });

                    $('#uploader').removeData('editingRow').attr('multiple', 'multiple');
                    $('.changeButton').removeAttr('disabled');
                }
            }).on('fileuploadadd', function(e, data) {
                $('#uploadedFiles').parent().removeClass('hide');

                var editingRow = $('#uploader').data('editingRow');
                $.each(data.files, function(index, file) {
                    var $tr = editingRow ? editingRow : $('#fileRowTemplate').clone().appendTo('#uploadedFiles').removeClass('hide').removeAttr('id');
                    $tr
                        .attr('data-file-name', file.name)
                        .find('td')
                            .eq(0)
                                .find('.fileName').html(file.name.length > 50 ? file.name.substr(0, 50) + '...' : file.name).end()
                                .end()
                            .eq(1)
                                .html(filesize(file.size));
                });
            }).on('fileuploadprogress', function(e, data) {
                $('#uploadedFiles').trigger('updateProgress', [data.files[0].name, 100 * data.loaded / data.total + '%']);
            });

            // Update file description handler
            $('#uploadedFiles').on('click', '.editableDesc', function() {
                var fid = $(this).parents('tr').attr('data-file-id');
                if (fid) {
                    $(this).inlineEditor({
                        method: 'POST',
                        url: '/admin/file/desc',
                        field: 'desc',
                        data: {
                            fid: fid
                        }
                    });
                }
            });

            // Remove file handler
            $('#uploadedFiles').on('click', '.removeButton', function() {
                var $that = $(this), fileId = $that.parents('tr').attr('data-file-id'), removeFileDialog = $('#removeFileDialog');
                removeFileDialog
                    // Yes button click handler
                    .find('.yesButton')
                        .off('click')
                        .on('click', function() {
                            $.post('/admin/file/remove', {
                                id: fileId
                            }).success(function(response) {
                                $that.parents('tr').remove();
                                removeFileDialog.modal('hide');
                            });
                        })
                        .end()
                    .modal('show');
            });

            // Change file handler
            $('#uploadedFiles').on('click', '.changeButton', function() {
                var $row = $(this).parents('tr');
                $('#uploader')
                        .data('editingRow', $row)
                        .removeAttr('multiple')
                        .fileupload({
                            formData: {
                                fid: $row.attr('data-file-id')
                            }
                        })
                        .click();
            });

            // Mark file as free for guests
            $('#uploadedFiles').on('click', '.freeButton', function() {
                var $that  = $(this),
                    fileId = $that.parents('tr').attr('data-file-id');
                $that.attr('disabled', 'disabled');
                $.post('/admin/file/free', {
                    id: fileId
                }).success(function(response) {
                    $that.removeAttr('disabled');
                    if (response.success) {
                        $that
                            .toggleClass('btn-success').toggleClass('btn-danger')
                            .find('i').toggleClass('fa-check').toggleClass('fa-times');
                    }
                });
            });

            // Show download URLs
            $('#uploadedFiles').on('click', '.downloadUrlButton', function() {
                var $that    = $(this),
                    fileId   = $that.parents('tr').attr('data-file-id'),
                    $content = $('#accountDownloadTab');

                $('#downloadUrlDialog').modal('show');

                $content.addClass('text-center').html('').append($('<i/>').addClass('fa fa-spin fa-refresh'));
                $.post('/admin/file/package', {
                    id: fileId
                }).success(function(response) {
                    $content.find('i').remove();
                    if (response.packages.length == 0) {
                        $content.html('There is no packages using this file');
                    } else {
                        $content.removeClass('text-center');
                        var $dl = $('<dl/>').addClass('dl-horizontal').appendTo($content);
                        $.each(response.packages, function(index, package) {
                            $('<dt/>').html(package.name).appendTo($dl);
                            $('<dd/>')
                                .css('margin-bottom', '10px')
                                .appendTo($dl)
                                .append(
                                    $('<input/>')
                                        .addClass('form-control')
                                        .attr('readonly', 'readonly')
                                        .focus(function() {
                                            $(this).select();
                                        })
                                        .mouseup(function() {
                                            return false;
                                        })
                                        .val('#{downloadUrl}/account/download/' + package.slug + '/' + response.file._id)
                                );
                        });
                    }

                    var $guestDownloadTab = $('#guestDownloadTab').html('');
                    if (!response.file || !response.file.free) {
                        $guestDownloadTab.addClass('text-center').html('The file is not free download for guests');
                    } else {
                        $('<input/>')
                            .appendTo($guestDownloadTab)
                            .addClass('form-control')
                            .attr('readonly', 'readonly')
                            .focus(function() {
                                $(this).select();
                            })
                            .mouseup(function() {
                                return false;
                            })
                            .val('#{downloadUrl}/download/' + response.file._id + '/' + response.file.name)
                    }
                });
            });
        });